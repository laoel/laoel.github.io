[{"title":"在server 2012中部署weblogic","date":"2019-10-16T04:46:45.000Z","path":"2019/10/16/在server-2012中部署weblogic/","text":"Weblogic介绍Oracle WebLogic Server 是全球第一款云原生，适用于多层分布式企业应用开发和部署的企业级 Java 平台应用服务器，能够集中管理各种应用服务，如 Web 服务器功能、业务组件，以及企业后端系统访问，等等。 Oracle WebLogic Server 提供以下云就绪特性： 独特的多租户功能，有力促进大规模整合 轻型微容器架构，加强应用隔离并实现私有云与公有云之间的完全可移植性 多数据中心高可用性架构，有效防范应用中断 全面支持 Java EE 8 和 Java SE 12，帮助开发人员锐意创新，充分发挥 DevOps 的效力。 基于 Oracle WebLogic Server 的 Oracle Java 云服务，无论在本地还是云端都能访问同一平台 准备下载安装包 jdk安装包 https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html weblogic安装包 https://www.oracle.com/middleware/technologies/fusionmiddleware-downloads.html jdk 环境变量配置右击我的电脑 $\\Longrightarrow$属性 $\\Longrightarrow$ 高级系统设置$\\Longrightarrow$ 环境变量 在系统变量中 新建名为 classpath 的变量名，变量值为 1.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\tools.jar 新建名为 JAVA_HOME 的变量名，变量值为 jdk的安装路径，下面是我电脑中的jdk安装路径。 1C:\\Program Files\\Java\\jdk1.8.0_191 在系统变量 path 中最末尾加上 1;%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin 然后保存，重新打开终端，分别输入 java -version 和 javac -version ，若均显示出对应的版本信息，则说明环境变量配置成功，如下所示。 123456789101112Microsoft Windows [版本 6.3.9600](c) 2013 Microsoft Corporation。保留所有权利。C:\\Users\\Administrator&gt;java -versionjava version \"1.8.0_191\"Java(TM) SE Runtime Environment (build 1.8.0_191-b12)Java HotSpot(TM) 64-Bit Server VM (build 25.191-b12, mixed mode)C:\\Users\\Administrator&gt;javac -versionjavac 1.8.0_191C:\\Users\\Administrator&gt; 开始安装 启动安装程序 在weblogic官网下载的是一个zip压缩文件，解压后为一个jar包。 打开终端，进入安装包的存放路径，输入以下命令启动安装程序： 1java -jar fmw_12.2.1.3.0_wls.jar 选择安装路径 选择安装类型（软件功能点） 之后进入 先决条件检查，然后是安装概要，没有问题后，我们点击安装。 可以看它的安装进度，等待它安装完成即可。 部署weblogic 在开始中找到Configuration Wizard即配置向导，开始创建域。 下图所示，默认选中第一个Basic Weblogic Server ......，即创建基本的域即可。其它几种domain类型是针对特定应用的，如sip、webservice。 设置管理员账号即管理domain（修改配置、启动、停止等维护操作）的操作账号。 选择域模式和JDK。 weblogic提供两种启动模式（开发模式、生产模式）。 开发模式，启动domain是不需要输入管理账号、密码的，并且轮训部署的应用程序，如果有文件更新，会自动更新（传说中的热部署）。 生产模式，启动domain必须输入管理账号、密码。为了提高性能，不会对应用程序进行轮训，而且建议使用原先bea自带的jrockit jdk作为运行的jdk（不过自从被oracle收购之后，安装目录下未提供jrockit jdk了（需要自行下载）。 这里选择默认的开发模式，选择JDK之后，点击下一步。 高级配置（可选配置），一般涉及到集群才需要选择，这里直接下一步。 配置概要，点击创建按钮，进行domain的创建。 配置进度。 配置完毕后如下图，可以选中点击启动管理服务器立即启动服务器。或者点击完成退出安装向导界面（后面如果启动服务器，到域目录下双击startWebLogic.cmd即可。 启动服务器 到域目录下双击startWebLogic.cmd即可。 1D:\\Oracle\\Middleware\\Oracle_Home\\user_projects\\domains\\base_domain\\startWebLogic.cmd 等待一会，看到有IP+端口(7001)后说明服务器启动完毕，或者说命令窗口不动后。 登录控制台，输入之前配置的管理账号、口令。 如下，就是WebLogic Server管理控制台，可以部署war包等操作。 部署war包，这里就不介绍了，可参考下面这篇文章。与其他中间件部署war步骤大体相同。 weblogic部署web项目（war包）- 阿叮339 注意：如果需要关闭weblogic，只需关闭weblogic窗口(即启动weblogic服务器时打开的命令窗口)就可以了。 weblogic的管理账号和密码会存储在本地的boot.properties文件中，可解密出明文，并不安全。 安装过程可能遇到的有一些报错a. 不是有效的JDK java 主目录出现错误提示 1234567891011java -jar fmw_12.2.1.3.0_wls.jar启动程序日志文件为C:\\Users\\Administrator\\AppData\\Local\\Temp\\OraInstall2019-10-09_10-29-34AM\\launcher2019-10-09_10-29-34AM.log。正在提取安装程序... . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . 完成此安装程序必须使用 Java 开发工具包 (JDK) 执行,但 C:\\Program Files\\Java\\jre1.8.0_191 不是有效的 JDK Java 主目录。日志位于此处: C:\\Users\\Administrator\\AppData\\Local\\Temp\\OraInstall2019-10-09_10-29-34AM\\launcher2019-10-09_10-29-34AM.log。按 Enter 退出 说明没有指定jdk中的java.exe程序，另外要以管理员身份运行cmd。 方法1：把安装包（jar包）移动到java.exe程序的同级目录中，然后运行java -jar fmw_12.2.1.3.0_wls.jar 方法2：直接指定jdk中的java.exe程序来运行jar包。 1D:\\fmw&gt;\"C:\\Program Files\\Java\\jdk1.8.0_191\\bin\\java\" -jar fmw_12.2.1.3.0_wls.jar 也可参考这篇文章cmd安装weblogic12c提示jre不是有效的JDK java主目录`问题解决过程 - heremy b. 找不到Configuration Wizard配置向导如果在开始程序中找不到Configuration Wizard配置向导，可以在weblogic的安装路径中找到config.cmd，运行它。 1D:\\Oracle\\Middleware\\Oracle_Home\\oracle_common\\common\\bin\\config.cmd 参考WebLogic(12C)——windows下安装教程 - M_ling 超详细 Windows下安装以及部署Weblogic - 叁念 WebLogic常见问题 - Mr_sheng weblogic部署web项目（war包）- 阿叮339","tags":[{"name":"安装","slug":"安装","permalink":"https://laoel.github.io/tags/安装/"},{"name":"weblogic","slug":"weblogic","permalink":"https://laoel.github.io/tags/weblogic/"}]},{"title":"在ubuntu18.04上安装和配置Apache2","date":"2019-10-09T06:53:40.000Z","path":"2019/10/09/在ubuntu18-04上安装和配置Apache2/","text":"apache介绍Apache HTTP Server（简称Apache）是Apache软件基金会的一个开放源码的网页服务器软件，可以在大多数计算机操作系统中运行，由于其跨平台和安全性，被广泛使用，是最流行的Web服务器端软件之一。它快速、可靠并且可通过简单的API扩展，将Perl/Python等解释器编译到服务器中。Apache HTTP服务器是一个模块化的服务器，源于NCSAhttpd服务器，经过多次修改，成为世界使用排名第一的Web服务器软件。 目录结构12/var/www/html/ # 网站根目录├── index.html 1234567891011/etc/apache2/ # Apache 配置文件的目录├── apache2.conf # Apache配置文件├── conf-available├── conf-enabled├── envvars├── magic├── mods-available├── mods-enabled├── ports.conf├── sites-available└── sites-enabled 1234/var/log/apache2/ # Apache存放日志的目录├── access.log├── error.log└── other_vhosts_access.log 安装 首先更新软件 1sudo apt update &amp;&amp; sudo apt upgrade update 和 upgrade 的区别 update 是同步 /etc/apt/sources.list 和 /etc/apt/sources.list.d 中列出的源的索引，这样才能获取到最新的软件包。 upgrade 是升级已安装的所有软件包，升级之后的版本就是本地索引里的，因此，在执行 upgrade 之前一定要执行 update, 这样才能是最新的。 安装apache2软件包 1sudo apt install apache2 查看Apache2 服务状态，看到Active: active (running)即代表服务在运行中。 1service apache2 status 浏览器打开 http://127.0.0.1 ,会看到Apache的默认页面，也就代表安装成功。 常用管理命令 命令 作用 systemctl status apache2 查看服务状态 systemctl start apache2 启用Apache Web服务 systemctl stop apache2 停止Apache Web服务 systemctl restart apache2 重启Apache Web服务 systemctl reload apache2 载入Apache配置文件 systemctl disable apache2 禁用Apache服务的开机自启设置 systemctl enable apache2 设置Apache服务为开机自启 参考如何在 Ubuntu 上安装和优化 Apache - Thishosting 如何在Ubuntu 18.04上安装Apache Web服务器 - howtoing Apache官网的一些安全配置建议","tags":[{"name":"Apache","slug":"Apache","permalink":"https://laoel.github.io/tags/Apache/"},{"name":"配置","slug":"配置","permalink":"https://laoel.github.io/tags/配置/"}]},{"title":"cve-2019-0708漏洞复现","date":"2019-10-06T06:22:51.000Z","path":"2019/10/06/cve-2019-0708漏洞复现/","text":"文章待补充 CVE-2019-0708 | 远程桌面服务远程执行代码漏洞 当未经身份验证的攻击者使用RDP连接到目标系统并发送特制请求时，远程桌面服务（以前称为终端服务）中存在一个远程执行代码漏洞。此漏洞是预先认证的，不需要用户交互。成功利用此漏洞的攻击者可以在目标系统上执行任意代码。然后，攻击者可能会安装程序。查看，更改或删除数据；或创建具有完全用户权限的新帐户。 要利用此漏洞，攻击者需要通过RDP向目标系统远程桌面服务发送特制请求。 此更新通过更正远程桌面服务处理连接请求的方式来解决漏洞。 EXP公开Metasploit 在博客和推特上相继发布消息称，Metasploit正式集成针对CVE-2019-0708（也称为BlueKeep）的漏洞利用模块，虽然目前的初始版本只适用于64位版本的Windows 7和Windows 2008 R2，但也释放出了一个威胁信号，无数潜在攻击者已经开始关注到这个信息，随着后续模块更新，BlueKeep漏洞的威力也会逐渐显现出来。 参考文章https://www.freebuf.com/vuls/213745.html https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-0708 https://github.com/rapid7/metasploit-framework/pull/12283","tags":[{"name":"CVE","slug":"CVE","permalink":"https://laoel.github.io/tags/CVE/"}]},{"title":"CFOP  公式图  超清版","date":"2019-10-04T14:52:15.000Z","path":"2019/10/04/CFOP-公式图-超清版/","text":"点此查看","tags":[{"name":"CFOP公式","slug":"CFOP公式","permalink":"https://laoel.github.io/tags/CFOP公式/"},{"name":"魔方","slug":"魔方","permalink":"https://laoel.github.io/tags/魔方/"}]},{"title":"网络安全聚合列表","date":"2019-10-04T14:43:55.000Z","path":"2019/10/04/网络安全聚合列表/","text":"安全 | 社区 | 平台 | 媒体乌云知识库 铁匠运维网 i春秋社区 先知社区 看雪论坛 吾爱破解 安全博客 freebuf 漏洞银行 安全客 seebug sec-wiki mottoin 安全牛 E安全 即刻安全 撕吼 游侠安全网 漏洞时代 华盟网 iOSRE | 逆 0x00sec kali linux 破壳 信息安全知识库 漏洞库乌云镜像 CVE cybercrime Exploit Database 同程SRC - 公开漏洞 比戈大牛漏洞列表 Blog尼古拉斯.赵四 nMask风陵渡口 itPoet Neurohazard 小小吴 危险漫步 masterxsec volatileminds 阿德马Web安全 lynn 360Unicorn seebug-Paper A.T365 Cracer 安全 安全帮 红日攻防 蓝鲸安全 dewhurst codemetrix à ō é study优质安全列表 Web-Security-Learning OWASP测试指南 飞龙 逆向教程 iOS 安全攻防 移动安全入门 owasp-mstg Kali Linux 渗透 Android Developer Apple Developer 众测平台阿里先知 漏洞盒子 CNVD 教育行业(Beta) seebug 比戈大牛 SRCs | src收录列表 360SRC TSRC ASRC USRC 网易SRC 信息收集 | 加密解密 | 在线检测Whois查询 微步在线 FOFA Pro SEO查询 ZoomEye BugScaner C段查询 C段 | 5kik ipip.net Shodan XSS平台 SOMD5 chamd5 MD5 &amp; SHA1 dmd5 梆梆-APP检测 360显危镜 腾讯哈勃 百度云观测 UpGuard 安全招聘freebuf招聘站 i春秋招聘专版 安全脉搏招聘贴 看雪论坛招聘专区 先知社区招聘贴 安全牛招聘站 吾爱破解招聘区 mottoin招聘贴 others铁匠运维网友链 Web安全常见漏洞修复建议 - 平安安全博客 Goole Code 国外信息安全Feed源 Web安全漏洞加固手册 常见漏洞和解决办法-360","tags":[{"name":"信息安全","slug":"信息安全","permalink":"https://laoel.github.io/tags/信息安全/"},{"name":"网络安全","slug":"网络安全","permalink":"https://laoel.github.io/tags/网络安全/"}]},{"title":"一些web安全漏洞介绍和修复建议","date":"2019-10-04T14:42:47.000Z","path":"2019/10/04/一些web安全漏洞介绍和修复建议/","text":"高危-SQL注入【漏洞危害】 [1] 攻击者通过SQL注入，能够直接获取数据库敏感数据，设置通过数据库执行系统命令。 【解决方法】 [1] 使用全局过滤器，过滤特殊字符，正确处理数据类型。包括但不限于以下字符及字符串：select and or like regxpfrom where update exec order by having drop delete ( ) [ ] &lt; &gt; , . ; : ‘“ # % + - _ = / * @。 [2] 预编译 SQL 语句，而不要动态组装 SQL 语句，否则必须确保在使用输入的数据组装成SQL 语句之前，对特殊字符进行预处理。 [3] 以最小权限执行 SQL 语句。 [4] 屏蔽错误回显。 [5] 必要时，限制长度。 高危-存储型XSS【漏洞危害】 [1] 攻击者通过存储型XSS，不仅能够进行钓鱼，窃取用户登录会话，甚至能够直接控制浏览器，或者引发蠕虫攻击。 【解决方法】 [1] 检查网站所有用户输入数据的地方是否有进行过滤处理。过滤处理包括但不限于以下字符及字符串：Javascript script src imgonerror { } ( ) &lt; &gt; = , . ; : “ ‘ # ! / * \\。 [2] 根据页面的输出背景环境，对输出进行编码或使用一个统一的规则和库做输出编码，使用安全框架进行安全编码。 [3] 对于富文本框，使用白名单控制输入，而不是黑名单。 高危-未授权访问【漏洞危害】 [1] 权限控制不当，会造成网站数据非法篡改等。 [2] 泄露敏感数据。 【解决方法】 [1] 权限控制。 [2] 需登录的系统，页面的权限不可含空用户。 低危-敏感信息明文传输【漏洞危害】 [1] 由于用户认证在传输过程中没有进行加密，第三方可以通过中途拦截非加密的HTTP连接，读取用户认证信息。攻击者获得该信息后，登录前台或后台，篡改用户前台或后台信息等。 【解决方法】 [1] 使用业界较为安全的算法，诸如非对称算法等对传输过程中的用户名、密码、银行卡号等业务敏感信息进行加密处理。 [2] 网站部署HTTPS协议。 中危-用户猜测【漏洞危害】 [1] 攻击者能够快速定位到存在的用户，并进行针对性的攻击，进而较少攻击成本。 [2] 攻击者通过用户名猜测和验证码失效进行组合攻击。 【解决方法】 [1] 统一错误回显。 [2] 使用账号锁定策略。 [3] 使用复杂的验证码。 低危-默认报错信息【漏洞危害】 [1] 造成信息泄露，诸如中间件版本，数据库的列名或相关的查询语句等信息，给攻击者的下一步攻击做准备。 【解决方法】 [1] 优化代码从而避免程序报错。 [2] 隐藏默认报错页面中的敏感信息，自定义错误页面来屏蔽错误信息，统一回显错误信息。 中危-CSRF跨站请求伪造【漏洞危害】 [1] CSRF跨站请求伪造攻击可以在受害者毫不知情的情况下以受害者名义伪造请求发送给受攻击站点，从而在并未授权的情况下执行在权限保护之下的操作。 【解决方法】 [1] 在所有请求地址中添加 token 并验证。 [2] 验证 HTTP Referer 字段。 [3] 敏感操作需要验证码，更改密码需要验证老密码。 [4] 在HTTP头中自定义属性并验证。。 高危-任意文件上传【漏洞危害】 [1] 攻击者可以上传任意文件（包括后门文件等）直接控制服务器。 【解决方法】 [1] 检测上传元信息。 [2] 服务器端严格校验文件后缀。 [3] 根据业务，正确放回响应头（Content-Type）。 [4] 校验上传文件的内容。 中危-Apache Tomcat样例目录session操纵【漏洞危害】 [1] 攻击者可以通过操纵session获取管理员权限。 【解决方法】 [1] 删除tomcat示例文件等不必要的数据。 网站存在Apache Tomcat样例目录，又ession是全局通用的，所以用户可以通过操纵session获取管理员权限，具体利用过程可看以下链接： http://blog.51cto.com/chenjc/1434858 ApacheTomcat样例目录session操纵漏洞-龙与小妞-51CTO博客 低危-重放攻击【漏洞危害】 [1] 攻击者可以重放添加发起问卷的请求包，耗费后台资源。 【解决方法】 [1] 对账号新增数据包添加token唯一标识，每次成功之后必须更新toekn才能重新进行。 [2] 检验特定字段的唯一性。 中危-敏感信息泄露【漏洞危害】 [1] 信息泄露。 【解决方法】 [1] 屏蔽敏感信息，数据返回包去掉不必要的敏感信息。 [2] 用户密码等敏感信息，不要存储在前端。 中危-登录验证码绕过【漏洞危害】 [1] 验证码不失效，导致攻击者能够不断重放请求，爆破管理员账号。 【解决方法】 [1] 添加验证码的次数限制。 低危-使用GET方法传输业务敏感信息【漏洞危害】 [1] 信息泄露。 【解决方法】 [1] 使用POST方法传输用户名和密码等敏感信息。 低危-目录浏览【漏洞危害】 [1]信息泄露以及暴露网站的目录结构。 【解决方法】 [1] 页面权限控制。 [2] 关闭目录浏览功能。 高危-越权访问【漏洞危害】 [1] 权限控制不当，会造成网站数据非法篡改等。 【解决方法】 [1] 验证一切来自客户端的参数，重点是和权限相关的参数，比如用户ID或者角色权限ID等。 [2] session ID 和认证的token做绑定，放在服务器的会话里，不发送给客户端。 [3] 对于用户登录后涉及用户唯一信息的请求，每次都要验证检查所有权，敏感信息页面加随机数的参数，防止浏览器缓存内容。 高危-服务端请求伪造攻击SSRF【漏洞危害】 [1] 对外网、服务器所在内网、本地进行端口扫描，获取一些服务的banner信息。 [2] 攻击运行在内网或本地的应用程序（比如溢出）。 [3] 对内网web应用进行指纹识别，通过访问默认文件实现。 [4] 攻击内外网的web应用。 [5] 利用file协议读取本地文件等。。 【解决方法】 [1] 过滤返回信息，验证远程服务器对请求的响应是比较容易的方法。如果web应用是去获取某一种类型的文件,那么在把返回结果展示给用户之前先验证返回的信息是否符合标准。 [2] 统一错误信息，避免用户可以根据错误信息来判断远端服务器的端口状态。 [3] 限制请求的端口为http常用的端口。 [4] 黑名单内网ip，避免应用被用来获取获取内网数据，攻击内网。 [5] 禁用不需要的协议。","tags":[{"name":"web漏洞","slug":"web漏洞","permalink":"https://laoel.github.io/tags/web漏洞/"},{"name":"修复建议","slug":"修复建议","permalink":"https://laoel.github.io/tags/修复建议/"}]},{"title":"近期爆出的大漏洞 值得记录","date":"2019-10-04T14:41:56.000Z","path":"2019/10/04/近期爆出的大漏洞-值得记录/","text":"成功获取WinRAR 19年历史代码执行漏洞 https://research.checkpoint.com/extracting-code-execution-from-winrar/ 2019年2月20日 研究人员： Nadav Grossman “水滴”来袭：详解Binder内核通杀漏洞 http://blogs.360.cn/post/Binder_Kernel_Vul_CH.html 2019年3月4日 作者: Hongli Han(@hexb1n) of Qihoo 360 C0RE Team 关于Oracle WebLogic wls9-async组件存在反序列化远程命令执行漏洞的安全公告 http://www.cnvd.org.cn/webinfo/show/4989 2019-04-17 CNVD","tags":[{"name":"漏洞","slug":"漏洞","permalink":"https://laoel.github.io/tags/漏洞/"},{"name":"漏洞预警","slug":"漏洞预警","permalink":"https://laoel.github.io/tags/漏洞预警/"}]},{"title":"网络安全 方面 好文章 摘录","date":"2019-10-04T14:41:42.000Z","path":"2019/10/04/网络安全-方面-好文章-摘录/","text":"Android 第三方加固方案 对比 https://www.cnblogs.com/baiqiantao/p/9286449.html 20180709 白乾涛 App漏洞扫描哪家强？ http://blog.sina.com.cn/s/blog_3eecddd20102yf65.html 20181228 移动互联网李建华","tags":[{"name":"技术文章","slug":"技术文章","permalink":"https://laoel.github.io/tags/技术文章/"},{"name":"摘录","slug":"摘录","permalink":"https://laoel.github.io/tags/摘录/"}]},{"title":"网络安全 好书 摘记","date":"2019-10-04T14:41:31.000Z","path":"2019/10/04/网络安全-好书-摘记/","text":"Android软件安全权威指南 https://item.jd.com/12522178.html 出版时间：2019-03-01 丰生强 著 Android应用安全防护和逆向分析 https://item.jd.com/12271376.html 出版时间：2017-12-01 姜维 著 iOS应用逆向与安全 https://item.jd.com/12361729.html 出版时间：2018-06-01 刘培庆 著","tags":[{"name":"信息安全","slug":"信息安全","permalink":"https://laoel.github.io/tags/信息安全/"},{"name":"书籍推荐","slug":"书籍推荐","permalink":"https://laoel.github.io/tags/书籍推荐/"},{"name":"网络安全","slug":"网络安全","permalink":"https://laoel.github.io/tags/网络安全/"}]},{"title":"我的面经，渗透测试","date":"2019-10-03T03:24:31.000Z","path":"2019/10/03/我的面经，渗透测试/","text":"00x00 摘要笔者作为网络安全的初识者，从求职者的角度总结了一点点关于渗透测试工程师求职面试的要点给即将毕业的大学生（实习生和应届生）予以参考，以便能更好更快地找到一份自己满意的工作。总结基于笔者本人的几次面试经历，都是自己在各招聘网投简历（广州的几家公司）。 这里简单自我介绍一下： 我自学web渗透和Android逆向半年有余，目前已有将近一年的实习经验，计算机网络专业的专科生，通过赛事接触web渗透，实习时接触Android逆向，继而初识网络安全。没有什么值得吹嘘的事，O(∩_∩)O哈哈~，没事就学习研究。比较感兴趣的方向有：WEB渗透测试、Android逆向、IOT安全、等级保护。 个人博客 https://laoel.github.io 00x01 现场面试准备 简历（打印3份以上，彩色），身份证，毕业证等资料； 电脑（吃饭的家伙，无线鼠标，电源线等）； 本子和笔，着装整洁，守时（约好时间，提前20分钟到）； 面试公司的认识（地点，看看公司官网，了解公司发展时间戳，部门等）。 00x02 对于电话面试（技术员工）- 可看着读a. 约好时间并提前15分钟找个安静，没人打扰的地方，注意手机电量和信号； b. 站着进行电话面试，保持微笑，通话可录音； c. 一份简历，本子和笔，耳机等（看着简历来）； d. 先想好，面试官会问的问题及答案，记要点（渗透测试的思路等）。 00x03 面试官问的问题（技术员工或部门经理+HR）Q1 自我介绍1）可参照简历 2）有条理（三分钟左右） Q2 一个网站的渗透测试思路，流程（给你一个网站，怎么做？）1）信息收集 a. 服务器的相关信息（真实ip，系统类型，版本，开放端口，WAF等） b. 网站指纹识别（包括，cms，cdn，证书等），dns记录 c. whois信息，姓名，备案，邮箱，电话反查（邮箱丢社工库，社工准备等） d. 子域名收集，旁站查询(有授权可渗透)，C段等 e. google hacking针对化搜索，pdf文件，中间件版本，弱口令扫描等 f. 扫描网站目录结构，爆后台，网站banner，文件等敏感文件泄漏等 i. 传输协议，通用漏洞，exp，github源码等 2）漏洞挖掘 1&gt; 浏览网站，看看网站规模，功能，特点等 2&gt; 端口，弱口令，目录等扫描 3&gt; XSS，SQL注入，命令注入，CSRF，cookie安全检测，敏感信息，通信数据传输，暴力破解，任意文件上传，越权访问，未授权访问，目录遍历，文件包含，重放攻击（短信轰炸），服务器漏洞检测，最后使用漏扫工具等 3）漏洞利用 | 权限提升 a) mysql提权，serv-u提权，linux内核版本提权等 4）清除测试数据 | 输出报告 i 日志、测试数据的清理 ii 总结，输出渗透测试报告，附修复方案 5) 复测 验证并发现是否有新漏洞，输出报告，归档Q3 一个APP的逆向分析思路（给你一个APP，怎么做？）这里简单列一下app测试的大纲，详细不便放出（可参照OWASP的 mstg）： 1代码保护检测，2数据存储安全，3加密算法，4四大组件安全，5应用规范等（ 具体的可关注我 的博客，后续会发布相关的文章 ）。 Q4 简述某一漏洞的原理和渗透手法（SQL注入，XSS，CSRF等）SQL注入- 百度百科 SQL注入原理 a. SQL（结构化语句查询） b. 提交参数（调用数据库查询）的地方是用户可控的，并未做任何过滤处理 c. 分 数字型，字符型，搜索型，POST注入，Cookie注入，延时注入，盲注等 SQL注入，注入方法 1）如果是get型号，直接，sqlmap-u “注入点URL”. 2) 如果是post型诸如点，可以sqlmap-u “注入点URL” –data=”post的参数” 3）如果是cookie，X-Forwarded-For等，可以访问的时候，用burpsuite抓包，注入处用 * 号替换，放到文件里，然后sqlmap -r “文件地址” XSS跨站脚本攻击 - 百度百科 XSS原理 网站未对用户输入的数据做过滤处理，构造特定的JS脚本插入到文本框可引发XSS，会被浏览器解析，执行。 XSS常见攻击语句 12345&lt;BODY onload=\"alert('XSS')\"&gt;&lt;script&gt;alert(document.cookie)&lt;/script&gt;&lt;iframe src=\"javascript:alert(1)\"&gt;&lt;/iframe&gt;&lt;svg /onload=prompt(1)&gt;&lt;img src=\" \"=\" \" onerror=\"alert('xss')\"&gt; Q5 语言1，python，JAVA，算法，二进制等编程能力（笔者暂未学，不深入探讨） 2，ARM汇编（基本的汇编指令，寄存器等） 3，英语（CET-4，CET-6） Q6 WAF bypass1，关键字可以用%（只限IIS系列）。比如select，可以sel%e%ct 2，通杀的，内联注释，如/!select/ 3，编码，可两次编码 4，multipart请求绕过，在POST请求中添加一个上传文件，绕过了绝大多数WAF 5，参数绕过，复制参数，id=1&amp;id=1 6，内联注释 Q7 Kali的使用（Linux系统）kali菜单中各工具功能 - 努力改个网名 - 博客园 whatweb 指纹识别 dirb 目录扫描 whois whois查询 无线攻击套件 字典生成套件 爆破工具 Q8 OWASP-Top10web A1 注入， A2 失效的身份认证， A3 敏感信息泄露， A4 XML外部实体(XXE)， A5 失效的访问控制， A6 安全配置错误， A7 跨站脚本(XSS)， A8 不安全的反序列化， A9 使用含有已知漏洞的组件， A10 不足的日志记录和监控 https://www.owasp.org/index.php/Top_10-2017_Top_10h mobile M1-平台使用不当，M2-不安全的数据存储，M3-不安全的通信，M4-不安全的身份验证，M5-加密不足，M6-不安全的授权，M7-客户端代码质量问题，M8-代码篡改，M9-逆向工程，M10-无关的功能 https://www.owasp.org/index.php/Mobile_Top_10_2016-Top_10 Q9 网络安全事件应急响应（如，一业务主站被挂黑页的处理流程及应对方法）1. 取证，登录服务器，备份，检查服务器敏感目录，查毒（搜索后门文件 - 注意文件的时间，用户，后缀等属性），调取日志（系统日志，中间件日志，WAF日志等）； 2. 处理，恢复备份（快照回滚，最近一次），确定入侵方法（漏洞检测，并进行修复） 3. 溯源，查入侵IP，入侵手法（网路攻击事件）的确定等 4. 记录，归档--------预防-事件检测-抑制-根除-恢复-跟踪-记录通用漏洞的应对等其他安全应急事件 Q10 提交过的漏洞国内外的漏洞提交平台（先知、漏洞盒子），各SRC等 Q11 其他优势1，新兴技术的研究（IOT安全，区块链，人工智能，机器学习等） 2，个人博客（原创文章），投稿，人脉，安全峰会，安全研究Paper, 安全议题分享等 3，比赛（CTF，团队比赛等），线下培训 4，在校经历（获奖，个人项目，团队活动，担任学生干部等） Q12 读过的技术书籍（学习的途径）《白帽子讲web安全》、《ios应用逆向工程-第2版》、《Android应用安全防护和逆向分析》、《汇编语言-第3版》、《OWASP-MSTG》、《C#灰帽子：设计安全测试工具》 00x04 问面试官的问题q1 贵公司，信息安全部门的规模，发展等 q2 劳动合同（实习生签三方协议和转正问题），是否解决户口 q3 薪资（税后），奖金，股票期权，福利，活动，补贴 等 q4 任职后的工作职责，内容，出差，时间等 00x05 面试总结 记录面试官的问题和自己的回答 查漏补缺 收获 是否通过，下次面试或报道入职时间 00x06 扩展阅读网络安全、Web安全、渗透测试之笔经面经总结（三） - christychang Web 安全渗透方面的学习路线? - 知乎 【分享】一套实用的渗透测试岗位面试题，你会吗？ - Shun’s Blog 面试前都需要做些什么准备？- 知乎","tags":[{"name":"面试经验","slug":"面试经验","permalink":"https://laoel.github.io/tags/面试经验/"},{"name":"渗透测试","slug":"渗透测试","permalink":"https://laoel.github.io/tags/渗透测试/"}]},{"title":"markdown 语法介绍","date":"2019-09-29T02:02:40.000Z","path":"2019/09/29/markdown-语法介绍/","text":"原文地址 http://editor.md.ipandao.com/examples/full.html Editor.md Heading 1Heading 2Heading 3Heading 4Heading 5Heading 6Heading 1 link Heading linkHeading 2 link Heading linkHeading 3 link Heading linkHeading 4 link Heading link Heading link Heading linkHeading 5 link Heading linkHeading 6 link Heading link标题（用底线的形式）Heading (underline)This is an H1This is an H2字符效果和横线等 删除线 删除线（开启识别HTML标签时）斜体字 斜体字粗体 粗体粗斜体 粗斜体 上标：X2，下标：O2 缩写(同HTML的abbr标签) 即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启 The HTML specification is maintained by the W3C. 引用 Blockquotes 引用文本 Blockquotes 引用的行内混合 Blockquotes 引用：如果想要插入空白换行即&lt;br /&gt;标签，在插入处先键入两个以上的空格然后回车即可，普通链接。 锚点与链接 Links普通链接 普通链接带标题 直接链接：https://github.com 锚点链接 mailto:test.test@gmail.com GFM a-tail link @pandao 邮箱地址自动链接 test.test@gmail.com www@vip.qq.com @pandao 多语言代码高亮 Codes行内代码 Inline code执行命令：npm install marked 缩进风格即缩进四个空格，也做为实现类似 &lt;pre&gt; 预格式化文本 ( Preformatted Text ) 的功能。 &lt;?php echo &quot;Hello world!&quot;; ?&gt;预格式化文本： | First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell |JS代码 123456789101112131415161718192021222324252627282930313233343536function test() &#123; console.log(\"Hello world!\");&#125; (function()&#123; var box = function() &#123; return box.fn.init(); &#125;; box.prototype = box.fn = &#123; init : function()&#123; console.log('box.init()'); return this; &#125;, add : function(str) &#123; alert(\"add\", str); return this; &#125;, remove : function(str) &#123; alert(\"remove\", str); return this; &#125; &#125;; box.fn.init.prototype = box.fn; window.box =box;&#125;)();var testBox = box();testBox.add(\"jQuery\").remove(\"jQuery\"); HTML 代码 HTML codes1234567891011121314151617&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;mate charest=\"utf-8\" /&gt; &lt;meta name=\"keywords\" content=\"Editor.md, Markdown, Editor\" /&gt; &lt;title&gt;Hello world!&lt;/title&gt; &lt;style type=\"text/css\"&gt; body&#123;font-size:14px;color:#444;font-family: \"Microsoft Yahei\", Tahoma, \"Hiragino Sans GB\", Arial;background:#fff;&#125; ul&#123;list-style: none;&#125; img&#123;border:none;vertical-align: middle;&#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1 class=\"text-xxl\"&gt;Hello world!&lt;/h1&gt; &lt;p class=\"text-green\"&gt;Plain text&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 图片 ImagesImage: Follow your heart. 图为：厦门白城沙滩 图片加链接 (Image + Link)： 图为：李健首张专辑《似水流年》封面 列表 Lists无序列表（减号）Unordered Lists (-) 列表一 列表二 列表三 无序列表（星号）Unordered Lists (*) 列表一 列表二 列表三 无序列表（加号和嵌套）Unordered Lists (+) 列表一 列表二 列表二-1 列表二-2 列表二-3 列表三 列表一 列表二 列表三 有序列表 Ordered Lists (-) 第一行 第二行 第三行 GFM task list GFM task list 1 GFM task list 2 GFM task list 3 GFM task list 3-1 GFM task list 3-2 GFM task list 3-3 GFM task list 4 GFM task list 4-1 GFM task list 4-2 绘制表格 Tables 项目 价格 数量 计算机 $1600 5 手机 $12 12 管线 $1 234 First Header Second Header Content Cell Content Cell Content Cell Content Cell First Header Second Header Content Cell Content Cell Content Cell Content Cell Function name Description help() Display the help window. destroy() Destroy your computer! Left-Aligned Center Aligned Right Aligned col 3 is some wordy text $1600 col 2 is centered $12 zebra stripes are neat $1 Item Value Computer $1600 Phone $12 Pipe $1 特殊符号 HTML Entities Codes&copy; &amp; &uml; &trade; &iexcl; &pound;&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot; X&sup2; Y&sup3; &frac34; &frac14; &times; &divide; &raquo; 18&ordm;C &quot; &apos; [========] Emoji表情 :smiley: Blockquotes :star: GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x: :smiley: @mentions, :smiley: #refs, links, formatting, and tags supported :editormd-logo:; list syntax required (any unordered or ordered list supported) :editormd-logo-3x:; [ ] :smiley: this is a complete item :smiley:; []this is an incomplete item test link :fa-star: @pandao; [ ]this is an incomplete item :fa-star: :fa-gear:; :smiley: this is an incomplete item test link :fa-star: :fa-gear:; :smiley: this is :fa-star: :fa-gear: an incomplete item test link; 反斜杠 Escape*literal asterisks* [========] 科学公式 TeX(KaTeX)$$E=mc^2$$ 行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。 $$x &gt; y$$ $$(\\sqrt{3x-1}+(1+x)^2)$$ $$\\sin(\\alpha)^{\\theta}=\\sum_{i=0}^{n}(x^i + \\cos(f))$$ 多行公式： 12345\\displaystyle\\left( \\sum\\_&#123;k=1&#125;^n a\\_k b\\_k \\right)^2\\leq\\left( \\sum\\_&#123;k=1&#125;^n a\\_k^2 \\right)\\left( \\sum\\_&#123;k=1&#125;^n b\\_k^2 \\right) 123456789\\displaystyle \\frac&#123;1&#125;&#123; \\Bigl(\\sqrt&#123;\\phi \\sqrt&#123;5&#125;&#125;-\\phi\\Bigr) e^&#123; \\frac25 \\pi&#125;&#125; = 1+\\frac&#123;e^&#123;-2\\pi&#125;&#125; &#123;1+\\frac&#123;e^&#123;-4\\pi&#125;&#125; &#123; 1+\\frac&#123;e^&#123;-6\\pi&#125;&#125; &#123;1+\\frac&#123;e^&#123;-8\\pi&#125;&#125; &#123;1+\\cdots&#125; &#125; &#125; &#125; 123f(x) = \\int_&#123;-\\infty&#125;^\\infty \\hat f(\\xi)\\,e^&#123;2 \\pi i \\xi x&#125; \\,d\\xi 分页符 Page break Print Test: Ctrl + P [========] 绘制流程图 Flowchart12345678st=&gt;start: 用户登陆op=&gt;operation: 登陆操作cond=&gt;condition: 登陆成功 Yes or No?e=&gt;end: 进入后台st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op [========] 绘制序列图 Sequence Diagram1234Andrew-&gt;China: Says Hello Note right of China: China thinks\\nabout it China--&gt;Andrew: How are you? Andrew-&gt;&gt;China: I am good thanks! End","tags":[{"name":"md","slug":"md","permalink":"https://laoel.github.io/tags/md/"},{"name":"markdown","slug":"markdown","permalink":"https://laoel.github.io/tags/markdown/"},{"name":"语法介绍","slug":"语法介绍","permalink":"https://laoel.github.io/tags/语法介绍/"}]},{"title":"博客搭建小记","date":"2019-09-28T09:36:06.000Z","path":"2019/09/28/博客搭建小记/","text":"叙博客 主要用来写 技术文章，记录自己的知识，也希望可以帮助到他人少走弯路。 搭建参考先参照了下列文章，进行了初步搭建 超详细Hexo+Github博客搭建小白教程 - 韦阳 通过GitHub和Hexo来搭建自己的个人博客 - Jowan 过程简单来说 安装 git Node.js（附带有npm），然后分别输入 node -v npm -v git --version ，如果显示出对应的版本号，就说明安装成功了。 安装hexo，输入 npm install hexo-cli -g 即可。然后输入 hexo -v 验证是否安装成功。 添加国内镜像源，下面这个是 淘宝的国内镜像。 1npm config set registry https://registry.npm.taobao.org 注册github账号，新建一个项目，名称为 your_username.github.io 。 本地找个存放博客文件的目录，准备建立博客。 输入 hexo init 初始化文件夹； 输入 npm install 安装必备的组件； 输入 hexo g 生成静态网页； 输入 hexo s 打开本地服务器； 浏览器访问 http://localhost:4000 ，就可以看到我们的博客啦。 配置ssh key，参照 GitHub搭建博客配置SSH - 空旷在远方 修改博客根目录下的 _config.yml 文件。 1234deploy: type: git repository: https://github.com/godweiyang/godweiyang.github.io branch: master repository修改为你自己的github项目地址。 发布博客到 自己的github项目上 。 12hexo ghexo d 更换博客主题以及主题的相关配置，极力推荐 https://github.com/chaooo/hexo-theme-BlueLake 相关配置看这篇 BlueLake博客主题的详细配置 - 秋过冬漫长 安装一些插件 npm install hexo-generator-feed 添加RSS npm install hexo-generator-sitemap 添加网站地图 npm install hexo-generator-baidu-sitemap 添加百度收录 到这一步，基本就可以了。更多配置，后续补充。 各种优化 Hexo NexT 站内搜索 站点统计 RSS订阅 字数统计 阅读时长 进度条 图片放大 Canvas背景 DaoVoice聊天 Gitalk评论 功能配置 - Sweet、汤圆儿 Hexo七牛云图床使用 - 晒月亮的孩子 写作技巧 hexo博客 页面配置 https://xaoxuu.com/wiki/material-x/pages/index.html hexo 创建文章、标签、分类的Front-matter - hiekay https://www.jianshu.com/p/6e4af897a3f0 Markdown 语法介绍 https://coding.net/help/doc/project/markdown.html Markdown 在线编辑器 http://editor.md.ipandao.com/examples/full.html","tags":[{"name":"杂文","slug":"杂文","permalink":"https://laoel.github.io/tags/杂文/"},{"name":"博客","slug":"博客","permalink":"https://laoel.github.io/tags/博客/"}]}]